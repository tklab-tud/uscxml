/**
 * Auto generated - edit config.h.in instead!
 *
 * This file is instantiated by cmake as config.h in the binary tree of
 * the out-of-source build. See cmake docs on CONFIGURE_FILE.
 *
 * WARNING: This file may never be included by public headers as we cannot
 * ship prebuilt packages otherwise!
 */

#ifndef __CONFIG_H
#define __CONFIG_H

/** Platform macros */
#cmakedefine UNIX
// suppress warnings with already define -DWIN32 macro
#ifndef WIN32
#cmakedefine WIN32
#endif
#cmakedefine APPLE
#cmakedefine CYGWIN
#cmakedefine IOS
#cmakedefine IOSSIM

// suppress warnings with already define -DANDROID macro
#ifndef ANDROID
#cmakedefine ANDROID
#endif

#cmakedefine PATH_SEPERATOR '@PATH_SEPERATOR@'

// CPP headers
#cmakedefine CXA_THROW_TYPEINFO_SIGNATURE
#ifdef CXA_THROW_TYPEINFO_SIGNATURE
#define CXA_THROW_SIGNATURE void __cxa_throw (void *thrown_exception, std::type_info *pvtinfo, void (*dest)(void *))
#else
#define CXA_THROW_SIGNATURE void __cxa_throw (void *thrown_exception, void *pvtinfo, void (*dest)(void *))
#endif


/** version */
#cmakedefine USCXML_VERSION_MAJOR "@USCXML_VERSION_MAJOR@"
#cmakedefine USCXML_VERSION_MINOR "@USCXML_VERSION_MINOR@"
#cmakedefine USCXML_VERSION_PATCH "@USCXML_VERSION_PATCH@"
#cmakedefine USCXML_VERSION "@USCXML_VERSION@"

#cmakedefine V8_VERSION @V8_VERSION@

#cmakedefine XERCESC_NS @XERCESC_NS@

/** build type */
#cmakedefine CMAKE_BUILD_TYPE "@CMAKE_BUILD_TYPE@"
#cmakedefine CMAKE_BUILD_TYPE_DEBUG
#cmakedefine CMAKE_BUILD_TYPE_RELEASE
#cmakedefine CMAKE_COMPILER_STRING "@CMAKE_COMPILER_STRING@"

/** miscellaneous */
#cmakedefine PROJECT_SOURCE_DIR "@PROJECT_SOURCE_DIR@"
#cmakedefine DIST_PREPARE
#cmakedefine BUILD_PROFILING
#cmakedefine SWI_BINARY "@SWI_BINARY@"

#ifndef FEATS_ON_CMD
/** whether we want some feature */
#cmakedefine WITH_CACHE_FILES
#cmakedefine WITH_INV_SCXML
#cmakedefine WITH_INV_DIRMON

#cmakedefine WITH_IOPROC_BASICHTTP
#cmakedefine WITH_IOPROC_HTTP
#cmakedefine WITH_IOPROC_HTTP_TIMEOUT @WITH_IOPROC_HTTP_TIMEOUT@
#cmakedefine WITH_IOPROC_SCXML

#cmakedefine WITH_ELEMENT_RESPOND

#cmakedefine WITH_DM_ECMA_V8
#cmakedefine WITH_DM_ECMA_JSC
#cmakedefine WITH_DM_LUA
#cmakedefine WITH_DM_PYTHON
#cmakedefine WITH_DM_C89
#cmakedefine WITH_DM_PROMELA
#endif

#cmakedefine BUILD_AS_PLUGINS

/** Optional libraries we found */
#cmakedefine UMUNDO_FOUND
#cmakedefine OPENAL_FOUND
#cmakedefine LIBSNDFILE_FOUND
#cmakedefine AUDIOTOOLBOX_FOUND
#cmakedefine MILES_FOUND
#cmakedefine V8_FOUND
#cmakedefine JSC_FOUND
#cmakedefine HAS_JSC_JAVASCRIPTCORE_H
#cmakedefine HAS_JSC_JAVASCRIPT_H
#cmakedefine LIBICAL_FOUND
#cmakedefine SWI_FOUND
#cmakedefine FFMPEG_FOUND
#cmakedefine LUA_FOUND
#cmakedefine OPENSCENEGRAPH_FOUND
#cmakedefine PROTOBUF_FOUND
#cmakedefine CORELOCATION_FOUND
#cmakedefine LIBPURPLE_FOUND
#cmakedefine OPENSSL_FOUND
#cmakedefine OPENSSL_HAS_ELIPTIC_CURVES
#cmakedefine EVENT_SSL_FOUND
#cmakedefine LIBEVENT_HAS_BEVCB
#cmakedefine HTTPS_ENABLED
#cmakedefine EXPECT_FOUND
#cmakedefine TCL_FOUND


/** Properties of the libraries we found */
#cmakedefine CURL_HAS_SMTP

/** Header files we found */
#cmakedefine HAS_UNISTD_H
#cmakedefine HAS_STRING_H
#cmakedefine HAS_SIGNAL_H
#cmakedefine HAS_EXECINFO_H
#cmakedefine HAS_DLFCN_H

/** Binaries we found */
#cmakedefine HAS_XDG_OPEN

#endif
